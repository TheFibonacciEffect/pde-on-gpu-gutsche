include("../scripts/diffusion_1D_test.jl")

using Test

# unit testes
@testset "Check functin output of Diff" begin
    @test Diff(ones(10)) ≈ zeros(9)
    @test Diff(LinRange(1,10,10)) ≈ ones(9)
end

# reference test for C and qx
ind = [3, 5, 10, 23, 50, 62, 70, 83, 115, 128, 140, 143, 144, 145, 156, 157, 160, 163, 172, 195]
val_C  = [0.9507509677031878, 0.9034120142186107, 0.7920526699566736, 0.5913733752215574,
            0.5102096446752931, 0.49368650416601223, 0.4917484401105116, 0.5056152950040271,
            0.4919560845404313, 0.5061011181587778, 0.5053067379464459, 0.5015648028052283,
            0.5001417998802514, 0.49866519160290096, 0.4837923007607793, 0.48276724901126544,
            0.4797826510202573, 0.47632581002817687, 0.45135460210449635, 0.11980735676266371]
val_qx = [0.2383391813104041, 0.2325889451201113, 0.20541243466201897, 0.0911008695920279,
            0.013999632324667166, 0.008651825438147354, -0.0057013784786963395,
            -0.009551381221931665, -0.006748202913343104, -0.00873661877780263,
            0.01148333231259624, 0.014339335688910992, 0.014869692617578423,
            0.015192829858097778, 0.010155800206040344, 0.009841669304342382,
            0.010353137279329738, 0.01408785753902242, 0.052290207700458335,
            0.23258894512011283]

@testset "Check C and qx values" begin
    @test all(val_C ≈ Res.C[ind])
    @test all(val_qx ≈ Res.qx[ind])
end